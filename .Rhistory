patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
patients
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
# 혈액형 이상치 제거
patients_outrm <- patients[patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'|
patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
# 이상값 (outlier) 처리
patients <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
table(patients$gender)
# 성별의 이상치 제거
patients_outrm <- patients[patients$gender == 'M' | patients$gender == 'F',]
patients_outrm
# 혈액형 이상치 제거
patients_outrm <- patients[patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'|
patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
# 쏠라빔 NA 를 중간값으로 변환 median
airquality$Solar.R <- replace(airquality$Solar.R,
is.na(airquality$Solar.R),
median(airquality$Solar.R, na.rm = T))
head(airquality)
# 이상값 (outlier) 처리
patients <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
table(patients$gender)
# 성별의 이상치 제거
patients_outrm <- patients[patients$gender == 'M' | patients$gender == 'F',]
patients_outrm
# 혈액형 이상치 제거
patients_outrm <- patients[patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'|
patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
# 대체2
patients <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=c("A", "O", "B", "AB", "C"))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=c("A", "O", "B", "AB", "C"))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=c("A", "O", "B", "AB", "C"))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$lood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2
boxplot(airquality[, c(1:4)])
boxplot(airquality[, c(1:4)])
boxplot(airquality[, 1])$stats
boxplot(airquality$Ozone)$stats
air$Ozone <- ifelse(air$Ozone < 1 | air>Ozone > 122,
NA, air$Ozone)
air <- airquality
air$Ozone <- ifelse(air$Ozone < 1 | air>Ozone > 122,
NA, air$Ozone)
# 숫자의 이상치
boxplot(airquality[, c(1:4)])
boxplot(airquality[, 1])$stats
boxplot(airquality$Ozone)$stats
air <- airquality
air$Ozone <- ifelse(air$Ozone < 1 | air>Ozone > 122,
NA, air$Ozone)
air
air$Ozone <- ifelse(air$Ozone<boxplot(airquality$Ozone)$stats[1] |
air$Ozone>boxplot(airquality$Ozone)$stats[5],
NA, air$Ozone)
air
# or
air <- airquality
air$Ozone <- ifelse(air$Ozone<boxplot(airquality$Ozone)$stats[1] |
air$Ozone>boxplot(airquality$Ozone)$stats[5],
NA, air$Ozone)
air
sum(is.na(air$Ozone))
sum(is.na(airquality$Ozone))
mean(air$Ozone, na.rm = T)
mean(airquality$Ozone, na.rm = T)
sum(is.na(airquality$Ozone))
mean(air$Ozone, na.rm = T)
mean(airquality$Ozone, na.rm = T)
air$Ozone <- ifelse(air$Ozone<boxplot(airquality$Ozone)$stats[1] |
air$Ozone>boxplot(airquality$Ozone)$stats[5], #IQR의 최대치치
NA, air$Ozone)
i
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
i = c(1:100)
i
# 반복문 실습
# 1. repeat
# sum, i
i <- 1
sum <- 0
repeat {
if (i > 10){
break
}
sum <- sum + i
i <- i + 1
}
print(sum)
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x[x%%3==0]
y <- c(1:100)
y[y%%4==0]
setdiff(x,y)
diffx
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x[x%%3==0]
y <- c(1:100)
y[y%%4==0]
diffx <- setdiff(x, y)
diffx
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x1 <- x[x%%3==0]
y <- c(1:100)
y1 <- y[y%%4==0]
diffx <- setdiff(x1, y1)
diffx
sum(diffx)
knitr::opts_chunk$set(echo = TRUE)
sum(diffx)
fn(1,4)
fn = function(x, n){
fn = 1
while (n > 1) {
fn = x * n
}
return(fn)
}
fn(1,4)
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x1 <- x[x%%3==0]
y <- c(1:100)
y1 <- y[y%%4==0]
diffx <- setdiff(x1, y1)
diffx
sum(diffx)
fn = function(x, n){
fn > 0
while (n > 1) {
fn = x * n
}
return(fn)
print(fn)
}
fn(2,3)
fn > 1
while (n > 1) {
fn = x * n
}
return(fn)
return(fn)
print(fn)
fn = function(x, n){
fn > 1
while (n > 1) {
fn = x * n
}
return(fn)
print(fn)
}
fn(2,3)
fn = function(x, n){
fn > 1
while (n > 1) {
fn = x * n
}
return(fn)
print(fn)
}
fn(2,3)
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x1 <- x[x%%3==0]
y <- c(1:100)
y1 <- y[y%%4==0]
diffx <- setdiff(x1, y1)
diffx
sum(diffx)
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x1 <- x[x%%3==0]
y <- c(1:100)
y1 <- y[y%%4==0]
diffx <- setdiff(x1, y1)
diffx
diffx <- setdiff(x1, y1)
diffx
sum(diffx)
?hflight
?hflights
install.packages("hflights")
install.packages("hflights")
?hflights
install.packages("hflights")
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x1 <- x[x%%3==0]
y <- c(1:100)
y1 <- y[y%%4==0]
diffx <- setdiff(x1, y1)
diffx
sum(diffx)
install.packages("hflights")
?hflights
library(hflights)
library(hflights)
library(hflights)
?hflights
table(hflights)
table[hflights]
is.na(hflights)
sum(is.na(hflights))
knitr::opts_chunk$set(echo = TRUE)
sum(is.na(hflights))
table(hflights)
data("hflights")
data(hfl)
data("hflights"
data("hflights")
max(hflights)
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x1 <- x[x%%3==0]
y <- c(1:100)
y1 <- y[y%%4==0]
diffx <- setdiff(x1, y1)
diffx
sum(diffx)
sum <- sum + i
return(fn)
fn = function(x, n){
for ( i in 1:n) {
if (i %% x == 0) {
sum <- sum + i
}
}
return(fn)
}
return(sum)
fn(3,10)
fn = function(x, n){
for ( i in 1:n) {
if (i %% x == 0) {
sum <- sum + i
}
}
return(sum)
}
fn(3,10)
sum <- 0
for ( i in 1:n) {
if (i %% x == 0) {
sum <- sum + i
}
}
fn = function(x, n){
sum <- 0
for ( i in 1:n) {
if (i %% x == 0) {
sum <- sum + i
}
}
return(sum)
}
fn(3,10)
fn(3,10)
max(hflights)/60
str(hflights)
data.frame(hflights)
head(hflights)
max(hflights$AirTime)
max(hflights$AirTime)/60
max(is.na(hflights$AirTime))
na.omit(hflights$AirTime)
airT <- na.omit(hflights$AirTime)
max(airT)
max(airT) / 60
max(airT) / 60
airM <- max(air) %% 60
max(is.na(hflights$AirTime))
airT <- na.omit(hflights$AirTime)
airH <- max(airT) / 60
airM <- max(air) %% 60
airH <- max(airT) %% 60
airH
airH <- max(airT) %/% 60
airH <- max(airT) %% 60
airT <- na.omit(hflights$AirTime)
airH <- max(airT) %/% 60
airM <- max(airT) %% 60
airH
airM
airT <- na.omit(hflights$AirTime)
airH <- max(airT) %/% 60
airM <- max(airT) %% 60
airH
airT <- na.omit(hflights$AirTime)
airH <- max(airT) %/% 60
airM <- max(airT) %% 60
airH
airM
airH <- max(airT) %/% 60
airH <- max(airT) %/% 60
max(is.na(hflights$AirTime))
airT <- na.omit(hflights$AirTime)
airH <- max(airT) %/% 60
max(is.na(hflights$AirTime))
airT <- na.omit(hflights$AirTime)
airH <- max(airT) %/% 60
airH
airM
airH <- max(airT) %/% 60
airM <- max(airT) %% 60
airH + print("h")
airM + print("m")
airM <- max(airT) %% 60
airH + print('h')
airM + print('m')
airM & print('m')
airH  print('h')
airM  print('m')
print(airH, 'h')
print(paste0(airH, 'h'))
print(paste0(airM, 'm'))
airM <- max(airT) %% 60
print(paste0(airH, 'h'))
print(paste0(airM, 'm'))
print(paste0(airH, 'h'))
print(paste0(airM, 'm'))
max(hflights$Distance)
maxDis <- max(hflights$Distance)
print(paste0(maxDis,'miles'))
print(paste0(maxDis,'miles'))
count.fields(hflights$Cancelled)
prof[str_detect(hflights$Cancelled,'1'),]
[str_detect(hflights$Cancelled,'1'),]
str_detect(hflights$Cancelled,'1')
,
str_detect(hflights$Cancelled,'1'),
as.frame(hflights)
as.array(hflights$canc)
as.array(hflights$Cancelled)
hflights[,"Cancelled", "1"]
d(hflights$Cancelled, 1)
data.frame(hflights$Cancelled, 1)
table(hflights$Cancelled)
cancelledF <- table(hflights$Cancelled)
cancelledF
cancelledF <- table(hflights$Cancelled$1)
cancelledF <- table(hflights$Cancelled)cancelledF
cancelledF
cancelledF
table(is.na(hflights$Cancelled))
table(is.na(hflights$Cancelled)) #NA 갯수 확인인
cancelledFL <- hflights[!is.na(hflights$Cancelled)]
cancelledFL
cancelledFL <- hflights[!is.na(hflights$Cancelled)]
cancelledFL
cancelledFL <- hflights[!is.na(hflights$Cancelled),]
cancelledFL
cancelledF
table(is.na(hflights$Cancelled)) # NA 갯수 확인
cancelledFL <- hflights[!is.na(hflights$Cancelled),]
as.array(hflights$Cancelled)
hflights[,"Cancelled", "1"]
data.frame(hflights$Cancelled, 1)
cancelledF <- table(hflights$Cancelled)
table(is.na(hflights$Cancelled)) # NA 갯수 확인
data.frame(hflights$Cancelled, 1)
cancelledF <- table(hflights$Cancelled)
cancelledF
table(is.na(hflights$Cancelled[2])) # NA 갯수 확인
table(is.na(hflights$Cancelled)[2]) # NA 갯수 확인
cancelledFL <- hflights[!is.na(hflights$Cancelled),]
cancelledFL
hflights[table(is.na(hflights$Cancelled)),2]
hflights[table(is.na(hflights$Cancelled))[2]
hflights[table(is.na(hflights$Cancelled))[2]
table(hflights$Cancelled)[2]
table(hflights$Cancelled)[2]
library(hflights)
sum(is.na(hflights))
