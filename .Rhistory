score[, i] <- ifelse(score[,i]>100)|score[,i]<0, NA, score[,i])
}
score[, i] <- ifelse(score[,i]>100|score[,i]<0, NA, score[,i])
# 데이터 정제
score <- read.csv('data/students2.csv')
score
for (i in 2:4) {
score[, i] <- ifelse(score[,i]>100|score[,i]<0, NA, score[,i])
}
#score
score <- read.csv('data/students2.csv')
score
score[,2:4] <- ifelse(score[,2:4]<0 | score[,2:4]>100,
NA, score[,2:4])
score
# 데이터 정제
score <- read.csv('data/students2.csv')
score
for (i in 2:4) {
score[, i] <- ifelse(score[,i]>100|score[,i]<0, NA, score[,i])
}
score
score <- read.csv('data/students2.csv')
score
score[,2:4] <- ifelse(score[,2:4]<0 | score[,2:4]>100,
NA, score[,2:4])
# 데이터 정제
score <- read.csv('data/students2.csv')
score
for (i in 2:4) {
score[, i] <- ifelse(score[,i]>100|score[,i]<0, NA, score[,i])
}
score
score <- read.csv('data/students2.csv')
score
score <- read.csv('data/students2.csv')
score
score[,2:4] <- ifelse(score[,2:4]<0 | score[,2:4]>=100,
NA, score[,2:4])
score
# 데이터 정제
score <- read.csv('data/students2.csv')
score
for (i in 2:4) {
score[, i] <- ifelse(score[,i]>100|score[,i]<0, NA, score[,i])
}
score
head(airquality)
sum(is.na(airq))
sum(is.na(airquality))
table(is.na(airquality))
sum(is.na(airquality$Temp))
mean(airquality$Temp)
sum(is.na(airquality$Ozone))
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = T)
sum(is.na(airquality))
sum(is.na(air_narm))
# 결측값제거
air_narm <- na.omit(airquality)
sum(is.na(air_narm))
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone))#위의 mean 값으로 바꿈
head(airquality)
head(airquality)
sum(is.na(airquality)) #44
table(is.na(airquality))
sum(is.na(airquality$Temp))
mean(airquality$Temp)
sum(is.na(airquality$Ozone)) # 37
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = T) # NA를 배제하고 T 를 구하라
# 결측값 제거
air_narm <- na.omit(airquality)
sum(is.na(air_narm))
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone))#위의 mean 값으로 바꿈
head(airquality)
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = T) # NA를 배제하고 T 를 구하라
# 결측값 제거
air_narm <- na.omit(airquality)
sum(is.na(air_narm))
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone))#위의 mean 값으로 바꿈
head(airquality)
head(airquality)
sum(is.na(airquality)) #44
table(is.na(airquality))
sum(is.na(airquality$Temp))
mean(airquality$Temp)
sum(is.na(airquality$Ozone)) # 37
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = T) # NA를 배제하고 T 를 구하라
# 결측값 제거
air_narm <- na.omit(airquality)
sum(is.na(air_narm))
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone))#위의 mean 값으로 바꿈
mean(airquality$Ozone, na.rm = T)#위의 mean 값으로 바꿈
head(airquality)
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone))
mean(airquality$Ozone, na.rm = T)#위의 mean 값으로 바꿈
head(airquality)
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = T) # NA를 배제하고 T 를 구하라
# 결측값 제거
air_narm <- na.omit(airquality)
sum(is.na(air_narm))
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone))
mean(airquality$Ozone, na.rm = T)#위의 mean 값으로 바꿈
head(airquality)
sum(is.na(airquality$Ozone)) # 37
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = T) # NA를 배제하고 T 를 구하라
# 결측값 제거
air_narm <- na.omit(airquality)
sum(is.na(air_narm))
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone))
mean(airquality$Ozone, na.rm = T)#위의 mean 값으로 바꿈
head(airquality)
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone)
mean(airquality$Ozone, na.rm = T))#위의 mean 값으로 바꿈
head(airquality)
# 결측값 제거
air_narm <- na.omit(airquality)
sum(is.na(air_narm))
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone)
mean(airquality$Ozone, na.rm = T))#위의 mean 값으로 바꿈
head(airquality)
# 결측값 대체
airquality$Ozone <- replace(airquality$Ozone, # 바꿀려는 값
is.na(airquality$Ozone),
mean(airquality$Ozone, na.rm = T))#위의 mean 값으로 바꿈
head(airquality)
head(airquality)
airquality$Solar.R <- replace(airquality$Solar.R,
is.na(airquality$Solar.R),
median(airquality$Solar.R, na.rm = T))
head(airquality)
patients
# 이상값 (outlier) 처리
patients <- date.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
# 이상값 (outlier) 처리
patients <- date.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
# 이상값 (outlier) 처리
patients <- date.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
# 이상값 (outlier) 처리
patients <- date.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
# 이상값 (outlier) 처리
patients <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
table(patients$gender)
# 성별의 이상치 제거
patients_outrm <- patients[patients$gender == 'M' | patients$gender == 'F']
# 성별의 이상치 제거
patients_outrm <- patients[patients$gender == 'M' | patients$gender == 'F',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F',
patients$blood_type == 'A'
patients$blood_type == 'B'
patients$blood_type == 'O'
patients$blood_type == 'AB']
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F',
patients$blood_type == 'A'
patients$blood_type == 'B'
patients$blood_type == 'O'
patients$blood_type == 'AB',]
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F',
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F'&
patients$blood_type == 'A'&
patients$blood_type == 'B'&
patients$blood_type == 'O'&
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F'|
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'| patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 혈액형 이상치 제거
patients_outrm <- patients[patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'|
patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
patients
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
# 혈액형 이상치 제거
patients_outrm <- patients[patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'|
patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
# 이상값 (outlier) 처리
patients <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
table(patients$gender)
# 성별의 이상치 제거
patients_outrm <- patients[patients$gender == 'M' | patients$gender == 'F',]
patients_outrm
# 혈액형 이상치 제거
patients_outrm <- patients[patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'|
patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
# 쏠라빔 NA 를 중간값으로 변환 median
airquality$Solar.R <- replace(airquality$Solar.R,
is.na(airquality$Solar.R),
median(airquality$Solar.R, na.rm = T))
head(airquality)
# 이상값 (outlier) 처리
patients <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
table(patients$gender)
# 성별의 이상치 제거
patients_outrm <- patients[patients$gender == 'M' | patients$gender == 'F',]
patients_outrm
# 혈액형 이상치 제거
patients_outrm <- patients[patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
# 성별과 혈액형 이상치 제거
patients_outrm <- patients[patients$gender == 'M'|
patients$gender == 'F'&
patients$blood_type == 'A'|
patients$blood_type == 'B'|
patients$blood_type == 'O'|
patients$blood_type == 'AB',]
patients_outrm
patients_outrm <- patients[patients$gender %in% c('M', 'F') &
patients$blood_type %in% c('A', 'B', 'O', 'AB'), ]
patients_outrm
# 이상치를 NA로 대체
patients$gender <- ifelse(patients$gender %in% c('M', 'F'),
patients$gender, NA)
patients
patients$blood_type <- ifelse(patients$blood_type %in% c('A', 'B', 'AB', 'O'),
patients$gender, NA)
patients
# 대체2
patients <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=factor(c("A", "O", "B", "AB", "C")))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=c("A", "O", "B", "AB", "C"))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=c("A", "O", "B", "AB", "C"))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
# 대체2
patients2 <- data.frame(name = c('1환','2환','3환','4환','5환'),
age=c(22,20,25,30,27),
gender=factor(c("M","F","M","K","F")),
blood_type=c("A", "O", "B", "AB", "C"))
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$lood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2$gender <- ifelse(patients2$gender %in% c('M','F'),
patients2$gender, NA)
patients2$blood_type <- ifelse(patients2$blood_type %in% c('A', 'B', 'O', 'AB')
patients2$blood_type, NA)
patients2
boxplot(airquality[, c(1:4)])
boxplot(airquality[, c(1:4)])
boxplot(airquality[, 1])$stats
boxplot(airquality$Ozone)$stats
air$Ozone <- ifelse(air$Ozone < 1 | air>Ozone > 122,
NA, air$Ozone)
air <- airquality
air$Ozone <- ifelse(air$Ozone < 1 | air>Ozone > 122,
NA, air$Ozone)
# 숫자의 이상치
boxplot(airquality[, c(1:4)])
boxplot(airquality[, 1])$stats
boxplot(airquality$Ozone)$stats
air <- airquality
air$Ozone <- ifelse(air$Ozone < 1 | air>Ozone > 122,
NA, air$Ozone)
air
air$Ozone <- ifelse(air$Ozone<boxplot(airquality$Ozone)$stats[1] |
air$Ozone>boxplot(airquality$Ozone)$stats[5],
NA, air$Ozone)
air
# or
air <- airquality
air$Ozone <- ifelse(air$Ozone<boxplot(airquality$Ozone)$stats[1] |
air$Ozone>boxplot(airquality$Ozone)$stats[5],
NA, air$Ozone)
air
sum(is.na(air$Ozone))
sum(is.na(airquality$Ozone))
mean(air$Ozone, na.rm = T)
mean(airquality$Ozone, na.rm = T)
sum(is.na(airquality$Ozone))
mean(air$Ozone, na.rm = T)
mean(airquality$Ozone, na.rm = T)
air$Ozone <- ifelse(air$Ozone<boxplot(airquality$Ozone)$stats[1] |
air$Ozone>boxplot(airquality$Ozone)$stats[5], #IQR의 최대치치
NA, air$Ozone)
i
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
i = c(1:100)
i
# 반복문 실습
# 1. repeat
# sum, i
i <- 1
sum <- 0
repeat {
if (i > 10){
break
}
sum <- sum + i
i <- i + 1
}
print(sum)
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x[x%%3==0]
y <- c(1:100)
y[y%%4==0]
setdiff(x,y)
diffx
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x[x%%3==0]
y <- c(1:100)
y[y%%4==0]
diffx <- setdiff(x, y)
diffx
# 1부터 100까지의 수 중에서 3의 배수이면서 4의 배수는 아닌 수의 합을 구하라
x <- c(1:100)
x1 <- x[x%%3==0]
y <- c(1:100)
y1 <- y[y%%4==0]
diffx <- setdiff(x1, y1)
diffx
sum(diffx)
knitr::opts_chunk$set(echo = TRUE)
sum(diffx)
fn(1,4)
fn = function(x, n){
fn = 1
while (n > 1) {
fn = x * n
}
return(fn)
}
fn(1,4)
